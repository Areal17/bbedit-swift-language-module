<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BBEditDocumentType</key>
	<string>CodelessLanguageModule</string>
	<key>BBLMLanguageCode</key>
	<string>Swft</string>
	<key>BBLMLanguageDisplayName</key>
	<string>Swift</string>
	<key>BBLMColorsSyntax</key>
	<true/>
	<key>BBLMIsCaseSensitive</key>
	<true/>
	<key>BBLMKeywordList</key>
	<array>
		<string>for</string>
		<string>case</string>
		<string>in</string>
		<string>while</string>
		<string>let</string>
		<string>var</string>
		<string>repeat</string>
		<string>while</string>
		<string>if</string>
		<string>else</string>
		<string>guard</string>
		<string>switch</string>
		<string>default</string>
		<string>where</string>
		<string>break</string>
		<string>continue</string>
		<string>fallthrough</string>
		<string>return</string>
		<string>throw</string>
		<string>defer</string>
		<string>do</string>
		<string>catch</string>
		<string>import</string>
		<string>typealias</string>
		<string>struct</string>
		<string>class</string>
		<string>enum</string>
		<string>protocol</string>
		<string>func</string>
		<string>get</string>
		<string>set</string>
		<string>willSet</string>
		<string>didSet</string>
		<string>throws</string>
		<string>rethrows</string>
		<string>inout</string>
		<string>indirect</string>
		<string>init</string>
		<string>deinit</string>
		<string>extension</string>
		<string>subscript</string>
		<string>prefix</string>
		<string>postfix</string>
		<string>infix</string>
		<string>operator</string>
		<string>precedenceÂ­</string>
		<string>associativity</string>
		<string>left</string>
		<string>right</string>
		<string>none</string>
		<string>convenience</string>
		<string>dynamic</string>
		<string>final</string>
		<string>lazy</string>
		<string>mutating</string>
		<string>nonmutating</string>
		<string>optional</string>
		<string>override</string>
		<string>required</string>
		<string>static</string>
		<string>unowned</string>
		<string>safe</string>
		<string>unsafe</string>
		<string>weak</string>
		<string>internal</string>
		<string>private</string>
		<string>public</string>
		<string>is</string>
		<string>as</string>
		<string>try</string>
		<string>self</string>
		<string>super</string>
		<string>dynamicType</string>
		<string>true</string>
		<string>false</string>
		<string>nil</string>
		<string>Type</string>
		<string>Protocol</string>
		<string>Self</string>
		<string>Type</string>		
		<string>#available</string>
		<string>#if</string>
		<string>#else</string>
		<string>#endif</string>
		<string>#line</string>
		<string>__FILE__</string>
		<string>__LINE__</string>
		<string>__COLUMN__</string>
		<string>__FUNCTION__</string>
		<string>@IBOutlet</string>
		<string>@IBAction</string>
	</array>
	<key>BBLMPredefinedNameList</key>
	<array>
		<!-- Structs -->
		<string>AnyBidirectionalCollection</string>
		<string>AnyBidirectionalIndex</string>
		<string>AnyForwardCollection</string>
		<string>AnyForwardIndex</string>
		<string>AnyRandomAccessCollection</string>
		<string>AnyRandomAccessIndex</string>
		<string>AnySequence</string>
		<string>Array</string>
		<string>ArraySlice</string>
		<string>AutoreleasingUnsafeMutablePointer</string>
		<string>Bool</string>
		<string>COpaquePointer</string>
		<string>CVaListPointer</string>
		<string>Character</string>
		<string>ClosedInterval</string>
		<string>CollectionOfOne</string>
		<string>ContiguousArray</string>
		<string>Dictionary</string>
		<string>DictionaryGenerator</string>
		<string>DictionaryIndex</string>
		<string>DictionaryLiteral</string>
		<string>Double</string>
		<string>EmptyCollection</string>
		<string>EmptyGenerator</string>
		<string>EnumerateGenerator</string>
		<string>EnumerateSequence</string>
		<string>FlattenBidirectionalCollection</string>
		<string>FlattenBidirectionalCollectionIndex</string>
		<string>FlattenCollection</string>
		<string>FlattenCollectionIndex</string>
		<string>FlattenGenerator</string>
		<string>FlattenSequence</string>
		<string>Float</string>
		<string>GeneratorOfOne</string>
		<string>GeneratorSequence</string>
		<string>HalfOpenInterval</string>
		<string>IndexingGenerator</string>
		<string>Int</string>
		<string>Int16</string>
		<string>Int32</string>
		<string>Int64</string>
		<string>Int8</string>
		<string>JoinGenerator</string>
		<string>JoinSequence</string>
		<string>LazyCollection</string>
		<string>LazyFilterCollection</string>
		<string>LazyFilterGenerator</string>
		<string>LazyFilterIndex</string>
		<string>LazyFilterSequence</string>
		<string>LazyMapCollection</string>
		<string>LazyMapGenerator</string>
		<string>LazyMapSequence</string>
		<string>LazySequence</string>
		<string>ManagedBufferPointer</string>
		<string>Mirror</string>
		<string>MutableSlice</string>
		<string>ObjectIdentifier</string>
		<string>PermutationGenerator</string>
		<string>Range</string>
		<string>RangeGenerator</string>
		<string>RawByte</string>
		<string>Repeat</string>
		<string>ReverseCollection</string>
		<string>ReverseIndex</string>
		<string>ReverseRandomAccessCollection</string>
		<string>ReverseRandomAccessIndex</string>
		<string>Set</string>
		<string>SetGenerator</string>
		<string>SetIndex</string>
		<string>Slice</string>
		<string>StaticString</string>
		<string>StrideThrough</string>
		<string>StrideThroughGenerator</string>
		<string>StrideTo</string>
		<string>StrideToGenerator</string>
		<string>String</string>
		<string>CharacterView</string>
		<string>CharacterView.Index</string>
		<string>UTF16View</string>
		<string>UTF16View.Index</string>
		<string>UTF8View</string>
		<string>UTF8View.Index</string>
		<string>UnicodeScalarView</string>
		<string>Generator</string>
		<string>Index</string>
		<string>UInt</string>
		<string>UInt16</string>
		<string>UInt32</string>
		<string>UInt64</string>
		<string>UInt8</string>
		<string>UTF16</string>
		<string>UTF32</string>
		<string>UTF8</string>
		<string>UnicodeScalar</string>
		<string>Unmanaged</string>
		<string>UnsafeBufferPointer</string>
		<string>UnsafeBufferPointerGenerator</string>
		<string>UnsafeMutableBufferPointer</string>
		<string>UnsafeMutablePointer</string>
		<string>UnsafePointer</string>
		<string>Zip2Generator</string>
		<string>Zip2Sequence</string>
		<!-- Enumerations -->
		<string>Bit</string>
		<string>FloatingPointClassification</string>
		<string>ImplicitlyUnwrappedOptional</string>
		<string>AncestorRepresentation</string>
		<string>DisplayStyle</string>
		<string>Optional</string>
		<string>PlaygroundQuickLook</string>
		<string>Process</string>
		<string>UnicodeDecodingResult</string>
		<!-- Classes -->
		<string>AnyGenerator</string>
		<string>NonObjectiveCBase</string>
		<string>ManagedProtoBuffer</string>
		<string>ManagedBuffer</string>
		<string>VaListBuilder</string>
		<!-- Protocols -->
		<string>AbsoluteValuable</string>
		<string>AnyCollectionType</string>
		<string>AnyObject</string>
		<string>ArrayLiteralConvertible</string>
		<string>BidirectionalIndexType</string>
		<string>BitwiseOperationsType</string>
		<string>BooleanLiteralConvertible</string>
		<string>BooleanType</string>
		<string>CVarArgType</string>
		<string>CollectionType</string>
		<string>Comparable</string>
		<string>CustomDebugStringConvertible</string>
		<string>CustomLeafReflectable</string>
		<string>CustomPlaygroundQuickLookable</string>
		<string>CustomReflectable</string>
		<string>CustomStringConvertible</string>
		<string>DictionaryLiteralConvertible</string>
		<string>Equatable</string>
		<string>ErrorType</string>
		<string>ExtendedGraphemeClusterLiteralConvertible</string>
		<string>FloatLiteralConvertible</string>
		<string>FloatingPointType</string>
		<string>ForwardIndexType</string>
		<string>GeneratorType</string>
		<string>Hashable</string>
		<string>Indexable</string>
		<string>IntegerArithmeticType</string>
		<string>IntegerLiteralConvertible</string>
		<string>IntegerType</string>
		<string>IntervalType</string>
		<string>LazyCollectionType</string>
		<string>LazySequenceType</string>
		<string>MirrorPathType</string>
		<string>MutableCollectionType</string>
		<string>MutableIndexable</string>
		<string>MutableSliceable</string>
		<string>NilLiteralConvertible</string>
		<string>OptionSetType</string>
		<string>OutputStreamType</string>
		<string>RandomAccessIndexType</string>
		<string>RangeReplaceableCollectionType</string>
		<string>RawRepresentable</string>
		<string>ReverseIndexType</string>
		<string>SequenceType</string>
		<string>SetAlgebraType</string>
		<string>SignedIntegerType</string>
		<string>SignedNumberType</string>
		<string>Streamable</string>
		<string>Strideable</string>
		<string>StringInterpolationConvertible</string>
		<string>StringLiteralConvertible</string>
		<string>UnicodeCodecType</string>
		<string>UnicodeScalarLiteralConvertible</string>
		<string>UnsignedIntegerType</string>
		<string>_Incrementable</string>
	</array>
	<key>BBLMSuffixMap</key>
	<array>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.swift</string>
		</dict>
	</array>
	<key>BBLMPreferredFilenameExtension</key>
	<string>swift</string>
	<key>BBLMSupportsTextCompletion</key>
	<true/>
	<key>BBLMCanSpellCheckCodeRuns</key>
	<false/>
	<key>BBLMCommentLineDefault</key>
	<string>//</string>
	<key>BBLMCommentPrefixDefault</key>
	<string>/*</string>
	<key>BBLMCommentSuffixDefault</key>
	<string>*/</string>
	<key>BBLMScansFunctions</key>
	<true/>
	<key>Language Features</key>
	<dict>
		<key>Identifier and Keyword Character Class</key>
		<string>A-Za-z_0-9$@\x{00A8}\x{00AA}\x{00AD}\x{00AF}\x{00B2}-\x{00B5}\x{00B7}-\x{00BA}\x{00BC}-\x{00BE}\x{00C0}-\x{00D6}\x{00D8}-\x{00F6}\x{00F8}-\x{00FF}\x{0100}-\x{02FF}\x{0300}-\x{036F}\x{0370}-\x{167F}\x{180F}-\x{1DBF}\x{1DC0}-\x{1DFF}\x{1E00}-\x{1FFF}\x{200B}-\x{200D}\x{202A}-\x{202E}\x{203F}-\x{2040}\x{2054}\x{2060}-\x{206F}\x{2070}-\x{20CF}\x{20D0}-\x{20FF}\x{2100}-\x{218F}\x{2460}-\x{24FF}\x{2776}-\x{2793}\x{2C00}-\x{2DFF}\x{2E80}-\x{2FFF}\x{3004}-\x{3007}\x{3021}-\x{302F}\x{3031}-\x{303F}\x{3040}-\x{D7FF}\x{F900}-\x{FD3D}\x{FD40}-\x{FDCF}\x{FE20}-\x{FE2F}\x{FE30}-\x{FE44}\x{FE47}-\x{FFFD}</string>
		<key>Comment Pattern</key>
		<string><![CDATA[
		(?x:
			(?>  //  [^\r]*              \r)    (?# single line comment)
		  | (?>  /\* (                          (?# multiline comment)
		  					[^/*] 
		  			  	|	/(?=[^*])	(?# a "/" not followed by "*")
		  			  	|	\*(?=[^/])	(?# a "*" not followed by "/")
		  				|	\r
		  				|	(?R)		(?# recursive match to handle nested comments)
		  			 )*? 
		  		 \*/)
		)
		]]></string>
		<key>String Pattern</key>
		<string><![CDATA[
		(?x:
			(?>	"	(
						[^"\r\\]	(?# match anything potential ending quote, new line, or start of escape sequence)
					|	\\.			(?# match any escape sequence pair)
					)*?
				"
			)
		)
		]]></string>
		<key>Function Pattern</key>
		<string><![CDATA[
		(?x:
			(?>
				(?P<function>
					(^|\s)
					(func)
					\s+
					(?P<function_name>
						[A-Za-z_\x{00A8}\x{00AA}\x{00AD}\x{00AF}\x{00B2}-\x{00B5}\x{00B7}-\x{00BA}\x{00BC}-\x{00BE}\x{00C0}-\x{00D6}\x{00D8}-\x{00F6}\x{00F8}-\x{00FF}\x{0100}-\x{02FF}\x{0370}-\x{167F}\x{180F}-\x{1DBF}\x{1E00}-\x{1FFF}\x{200B}-\x{200D}\x{202A}-\x{202E}\x{203F}-\x{2040}\x{2054}\x{2060}-\x{206F}\x{2070}-\x{20CF}\x{2100}-\x{218F}\x{2460}-\x{24FF}\x{2776}-\x{2793}\x{2C00}-\x{2DFF}\x{2E80}-\x{2FFF}\x{3004}-\x{3007}\x{3021}-\x{302F}\x{3031}-\x{303F}\x{3040}-\x{D7FF}\x{F900}-\x{FD3D}\x{FD40}-\x{FDCF}\x{FE30}-\x{FE44}\x{FE47}-\x{FFFD}][A-Za-z_0-9\x{00A8}\x{00AA}\x{00AD}\x{00AF}\x{00B2}-\x{00B5}\x{00B7}-\x{00BA}\x{00BC}-\x{00BE}\x{00C0}-\x{00D6}\x{00D8}-\x{00F6}\x{00F8}-\x{00FF}\x{0100}-\x{02FF}\x{0300}-\x{036F}\x{0370}-\x{167F}\x{180F}-\x{1DBF}\x{1DC0}-\x{1DFF}\x{1E00}-\x{1FFF}\x{200B}-\x{200D}\x{202A}-\x{202E}\x{203F}-\x{2040}\x{2054}\x{2060}-\x{206F}\x{2070}-\x{20CF}\x{20D0}-\x{20FF}\x{2100}-\x{218F}\x{2460}-\x{24FF}\x{2776}-\x{2793}\x{2C00}-\x{2DFF}\x{2E80}-\x{2FFF}\x{3004}-\x{3007}\x{3021}-\x{302F}\x{3031}-\x{303F}\x{3040}-\x{D7FF}\x{F900}-\x{FD3D}\x{FD40}-\x{FDCF}\x{FE20}-\x{FE2F}\x{FE30}-\x{FE44}\x{FE47}-\x{FFFD}]*
					)
					(
						[^{]*
						(?P<block>							(?# body)
							{									(?# literal lbrace)
								(?>
									(?> [^{}]+ )
								  | (?P>block)					(?# recursion!)
								)*
							}									(?# literal rbrace)
						)
					)
				)
			)
		)]]></string>
		<key>Skip Pattern</key>
		<string><![CDATA[(?x:
			(?P>string) |
			(?P>comment)
		)]]></string>
	</dict>
</dict>
</plist>
